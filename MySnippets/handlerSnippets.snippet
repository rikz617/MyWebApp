{
	"Query Handler": {
		"prefix": "qhandler",
		"body": [
		  "public class Query : IRequest<${1:ReturnObject}> { }",
		  "        public class Handler : IRequestHandler<Query, ${1:ReturnObject}>",
		  "        {",
		  "            private readonly PeopleContext _context;",
		  "            private readonly ILogger<List> _logger;",
		  "",
		  "            public Handler(PeopleContext context, ILogger<List> logger)",
		  "            {",
		  "                _context = context;",
		  "                _logger = logger;",
		  "            }",
		  "",
		  "            public async Task<${1:ReturnObject}> Handle(Query request, CancellationToken cancellationToken)",
		  "            {",
		  "                // handler logic goes  here",
		  "            }",
		  "        }"
		],
		"description": "Query Handler"
	  },
	  "Command Handler": {
		"prefix": "chandler",
		"body": [
		  " public class Command : IRequest ",
		  "        {",
		  "         ",
		  "        }",
		  "",
		  "        public class Handler : IRequestHandler<Command>",
		  "        {",
		  "            private readonly PeopleContext _context;",
		  "            public Handler(PeopleContext context)",
		  "            {",
		  "                _context = context;",
		  "            }",
		  "",
		  "            public async Task<Unit> Handle(Command request, CancellationToken cancellationToken)",
		  "            {",
		  "               // handler logic  goes",
		  "                 var success = await _context.SaveChangesAsync() > 0;",
		  "",
		  "                if (success) return Unit.Value;",
		  "                 throw new Exception(\"Problem saving changes\");",
		  "            }           ",
		  "        }"
		],
		"description": "Command Handler"
	  }
}

